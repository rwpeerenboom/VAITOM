<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_cb_design_topic">
    <sys_cb_design_topic action="INSERT_OR_UPDATE">
        <compiled_topic display_value="Application Status">83a8e803137d6700215170d66144b0b5</compiled_topic>
        <design_definition>{"type":"FlowTopic","triggers":[{"type":"Trigger","name":"c3bcb2954b4247b584155e1e48025825","triggerType":"request","id":"c3bcb2954b4247b584155e1e48025825"}],"goals":[{"name":"primary","trigger_id":"c3bcb2954b4247b584155e1e48025825","nodes":[{"type":"StartGoal","goal_id":"be67964535094357a603de1fa1910ba3","greeting_msg":{"type":"String","mode":"string","value":""},"id":"61a5f1e6e48a48e5a4e126f9ce542924","name":"Start"},{"type":"TerminateGoal","goal_id":"be67964535094357a603de1fa1910ba3","confirmation_msg":{"type":"String","mode":"string","value":""},"id":"ebfb4aa1ed33451fa044f1a6ff7cd395","name":"End"},{"type":"ReferenceChoiceInputPrompt","mode":"external","id":"6776d731f3f04707ab6f6fcc6673a1f2","name":"List Services","goal_id":"be67964535094357a603de1fa1910ba3","variable_id":"8ab12f37a26e4d98ab006ca14a4d30ec","message":{"type":"String","mode":"string","value":"Here are your services that are currently in a critical state."},"optional":false,"expression_mode":"script","script":"(function execute() {\n    var options = [];    \n\n    // query current and future planned outages \n    var gr = new GlideRecord('cmdb_ci_service_auto');\n    gr.addQuery(\"operational_status\",'1') //op status is operational\n    gr.addQuery(\"severity\", \"1\") // severity is critical\n    //gr.addQuery(\"owned_by\", gs.getUserID());\n    gr.orderBy('busines_criticality');\n    gr.query();\n\n    while(gr.next()) {\n        options.push({ 'value': gr.getUniqueValue(), 'label': gr.getDisplayValue('name') });\n    }\n    \n    return options;    \n})()\n","no_options_found_message":{"type":"String","mode":"string","value":"No Records Found"},"condition":{"type":"Condition","mode":"external_script","value":"(function execute() {\n    var options = [];    \n\n    // query current and future planned outages \n    var gr = new GlideRecord('cmdb_ci_service_auto');\n    gr.addQuery(\"operational_status\",'1') //op status is operational\n    gr.addQuery(\"severity\", \"1\") // severity is critical\n    //gr.addQuery(\"owned_by\", gs.getUserID());\n    gr.orderBy('busines_criticality');\n    gr.query();\n\n    while(gr.next()) {\n        options.push({ 'value': gr.getUniqueValue(), 'label': gr.getDisplayValue('name') });\n    }\n    \n    return options;    \n})()\n"}},{"type":"OutputPrompt","value":{"type":"String","mode":"script","value":"(function execute() {\n// query current and future planned outages \n    var gr = new GlideRecord('cmdb_ci_service_auto');\n    gr.addQuery(\"operational_status\",'1') //op status is operational\n    gr.addQuery(\"severity\", \"1\") // severity is critical\n    //gr.addQuery(\"owned_by\", gs.getUserID());\n    gr.orderBy('busines_criticality');\n    gr.setLimit(1);\n    gr.query();\n    \n    var msg = '';\n    while(gr.next()){\n       vaVars.singleSvc = gr.sys_id;\n       var fields = ['name', 'severity', 'busines_criticality', 'owned_by', 'owned_by.email'];\n       var card = new global.VaRecordCardRenderer(true);\n   \n       var data = card.createFields(fields, gr);\n       //var affectedValue = gr.getDisplayValue('name');\n       //var affectedSystem = card.createStaticField(gs.getMessage('Affected System'), affectedValue, null); //Change label text for CI to Affected System\n       //data.unshift(affectedSystem);\n\n       msg = card.renderCard(null, data);\n\n    }    \n     return msg;\n  })()\n\n\n    /*\n    var fields = ['name', 'severity', 'busines_criticality', \"owned_by\", \"email\"];\n    var card = new global.VaRecordCardRenderer(true);\n\n    var msg = '';\n    var gr = new GlideRecord('cmdb_ci_service_auto');\n\n    //Go with the multiple service unless it doesn't exist\n\n    var service = vaVars.singleSvc;\n    if (!gs.nil(vaInputs.list_services))\n        service = vaInputs.list_services\n    \n    if ( gr.get(service) ) {\n        var data = card.createFields(fields, gr);\n        //var affectedValue = gr.getDisplayValue('cmdb_ci');\n        //var affectedSystem = card.createStaticField(gs.getMessage('Affected System'), affectedValue, null); //Change label text for CI to Affected System\n        //var affectedSystem = card.createStaticField(\"hello\", \"world\"); //Change label text for CI to Affected System        \n        //data.unshift(affectedSystem);\n        msg = card.renderCard(null, data);\n    }\n    return msg;\n})()\n*/"},"id":"6596fc2a6a0f4f99a2ea7bf6d8b12206","name":"Display Service","goal_id":"be67964535094357a603de1fa1910ba3"},{"type":"ReferenceChoiceInputPrompt","mode":"external","id":"bbd6498a971e46ab8db02ff99a71c3ce","name":"Outage Options","goal_id":"be67964535094357a603de1fa1910ba3","variable_id":"9ee9bc2161fb45ca91606b02ff702fec","message":{"type":"String","mode":"string","value":"What would you like to do?"},"optional":false,"expression_mode":"script","script":"(function execute() {\n    var options = [];\n\n    var serviceId = vaInputs.list_services\n    if (gs.nil(serviceId))\n        serviceId = vaVars.singleSvc;\n\n    var incident = getOpenIncident(serviceId);\n\n    if (isRoomForEscalation(incident))\n        options.push({ 'value': 'escalation', 'label': 'Escalate Incident Priority' });\n\n    if (isMajorIncident(incident))\n        options.push({ 'value': 'major', 'label': 'Promote to Major Incident' });\n    \n    if (vaVars.count &gt; 1)\n        options.push({ 'value': 'more', 'label': 'Show more critical services' });\n    \n    if (vaVars.count == 1)\n        options.push({ 'value': 'back_to_service', 'label': 'Show service again' });\n        \n    options.push({ 'value': 'done', 'label': 'Done' });\n\n\n    return options;\n\n\n    function getOpenIncident(service) {  \n        var gr = new GlideRecord(\"incident\");\n        gr.addQuery(\"cmdb_ci\", service);\n        gr.addQuery(\"state\", \"!=\", ['6', '7', '8']);\n        gr.orderByDesc(\"sys_created_on\");\n        gr.setLimit(1);\n        gr.query();\n        if (gr.next())\n            return gr.sys_id + '';\n\n        return;\n    }\n\n    function isRoomForEscalation(incident) {\n        var gr = new GlideRecord(\"incident\");\n        gr.get(incident);\n        \n        if (gr.priority &gt; 1) \n            return true;\n\n        return false;\n    }    \n\n    function isMajorIncident(incident) {\n        return false;\n    }    \n})()\n","no_options_found_message":{"type":"String","mode":"string","value":"No Records Found"},"condition":{"type":"Condition","mode":"external_script","value":"(function execute() {\n    var options = [];\n\n    var serviceId = vaInputs.list_services\n    if (gs.nil(serviceId))\n        serviceId = vaVars.singleSvc;\n\n    var incident = getOpenIncident(serviceId);\n\n    if (isRoomForEscalation(incident))\n        options.push({ 'value': 'escalation', 'label': 'Escalate Incident Priority' });\n\n    if (isMajorIncident(incident))\n        options.push({ 'value': 'major', 'label': 'Promote to Major Incident' });\n    \n    if (vaVars.count &gt; 1)\n        options.push({ 'value': 'more', 'label': 'Show more critical services' });\n    \n    if (vaVars.count == 1)\n        options.push({ 'value': 'back_to_service', 'label': 'Show service again' });\n        \n    options.push({ 'value': 'done', 'label': 'Done' });\n\n\n    return options;\n\n\n    function getOpenIncident(service) {  \n        var gr = new GlideRecord(\"incident\");\n        gr.addQuery(\"cmdb_ci\", service);\n        gr.addQuery(\"state\", \"!=\", ['6', '7', '8']);\n        gr.orderByDesc(\"sys_created_on\");\n        gr.setLimit(1);\n        gr.query();\n        if (gr.next())\n            return gr.sys_id + '';\n\n        return;\n    }\n\n    function isRoomForEscalation(incident) {\n        var gr = new GlideRecord(\"incident\");\n        gr.get(incident);\n        \n        if (gr.priority &gt; 1) \n            return true;\n\n        return false;\n    }    \n\n    function isMajorIncident(incident) {\n        return false;\n    }    \n})()\n"}},{"type":"Decision","name":"Decision","branches":[{"type":"Branch","label":"Done","expression":{"type":"Applicability","mode":"script","value":"(function execute() {\n    return vaInputs.outage_options == 'done';\n})()\n"},"id":"b1f85e0ccfc0416faba09cecbc437d24","name":"Done"},{"type":"Branch","label":"Major Incident","expression":{"type":"Applicability","mode":"script","value":"(function execute() {\n    return vaInputs.outage_options == 'major';\n})()\n"},"id":"4d1f8fac903645df94850c3b28bf39d6","name":"Major Incident"},{"type":"Branch","label":"Escalation","expression":{"type":"Applicability","mode":"script","value":"(function execute() {\n    return vaInputs.outage_options == 'escalation';\n})()\n"},"id":"09ba4144907b4da9872d5d33e386e2a4","name":"Escalation"},{"type":"Branch","label":"More","expression":{"type":"Applicability","mode":"script","value":"(function execute() {\n    return vaInputs.outage_options == 'more';\n})()\n"},"id":"b94efc1bf7e24f17badaa95f5c3e3735","name":"More"},{"type":"Branch","label":"Back to Service","expression":{"type":"Applicability","mode":"script","value":"(function execute() {\n    return vaInputs.outage_options == 'back_to_service';\n})()\n"},"id":"715d54687b014f72a35c9c656fc52f62","name":"Back to Service"}],"id":"b36bb27d63c74ad69ffd27fb5e67662f","goal_id":"be67964535094357a603de1fa1910ba3"},{"type":"OutputPrompt","value":{"type":"String","mode":"script","value":"(function execute() {\n\n    var serviceId = vaInputs.list_services\n    if (gs.nil(serviceId))\n        serviceId = vaVars.singleSvc;\n\n    var incident = getOpenIncident(serviceId);\n\n    var gr = new GlideRecord(\"incident\");\n    gr.get(incident);\n\n    gr.impact = 1;\n    gr.urgency = 1;\n    commentOnTask(gr, gs.getUserName() + \" has escalated the priority of the incident\");\n    gr.update();\n\n\n    return 'Escalated the ' + gr.number + ' priority to ' + gr.priority.getDisplayValue();\n\n    function getOpenIncident(service) {\n        var gr = new GlideRecord(\"incident\");\n        gr.addQuery(\"cmdb_ci\", service);\n        gr.addQuery(\"state\", \"!=\", ['6', '7', '8']);\n        gr.orderByDesc(\"sys_created_on\");\n        gr.setLimit(1);\n        gr.query();\n        if (gr.next())\n            return gr.sys_id + '';\n\n        return;\n    }\n\n\n    function commentOnTask(taskGr, msg) {\n        var comment = msg;\n\n        var existingComments = taskGr.comments.getJournalEntry(-1).split('\\n\\n');\n        for (var i = 0; i &lt; existingComments.length; i++) {\n\t\t\tvar existingComment = existingComments[i];\n\n\t\t\texistingCommentMod = existingComment.replace(/\\n/g, '');\n\t\t\tcommentMod = comment.replace(/\\n/g,'');\n\t\t\t\n            if (existingCommentMod.indexOf(commentMod) &gt;= 0) {\n                return;\n            }\n        }\n\n        taskGr.comments = comment;\n    }\n\n})()\n"},"id":"0632c86cc8fd4c1ba4c317c6eb0c1c72","name":"Escalate priority","goal_id":"be67964535094357a603de1fa1910ba3"},{"type":"OutputPrompt","value":{"type":"String","mode":"string","value":"gs.getMessage(\"Here's the detail for the service\")"},"id":"7f37ba095952401297312bb7cbf7307c","name":"Service detail","goal_id":"be67964535094357a603de1fa1910ba3"},{"type":"ScriptedAction","script":"(function execute() {\n    // reset to first page\n    vaVars.index = 0;\n\n    function getNumberOfCriticalServices() {\n        // count how many outages there are\n        var count = 0;\n        var gr = new GlideAggregate('cmdb_ci_service_auto');\n        gr.addQuery(\"operational_status\",'1') //op status is operational\n        gr.addQuery(\"severity\", \"1\") // severity is critical\n        //gr.addQuery(\"owned_by\", gs.getUserID());\n        gr.addAggregate('COUNT');\n        gr.query();\n        if (gr.next())\n            count = gr.getAggregate('COUNT');\n\n        return count;\n    }    \n\n    // set count variable\n    vaVars.count = getNumberOfCriticalServices();\n\n    // get SN Instance Name to be used for Health Map Link\n    vaVars.Instance = gs.getProperty(\"instance_name\");\n})()\n","id":"c2fc3969dcd0440a906ca3076c6c7b9c","name":"Check critical status","goal_id":"be67964535094357a603de1fa1910ba3"},{"type":"Decision","name":"Decision","branches":[{"type":"Branch","label":"Multiple","expression":{"type":"Applicability","mode":"script","value":"(function execute() {\n    return vaVars.count &gt; 1;\n})()\n"},"id":"93fbafcbcadf441d844caaa5a4e46ce1","name":"Multiple"},{"type":"Branch","label":"No outage","expression":{"type":"Applicability","mode":"script","value":"(function execute() {\n    return vaVars.count == 0;\n})()\n"},"id":"0e84e681ee7445e29bebb023e74504d6","name":"No outage"},{"type":"Branch","label":"One outage","expression":{"type":"Applicability","mode":"script","value":"(function execute() {\n    return vaVars.count == 1;\n})()\n"},"id":"4e6e888a1f1446d090e38aefb22477f3","name":"One outage"}],"id":"35583873192f4f8ab5955daef3a87377","goal_id":"be67964535094357a603de1fa1910ba3"},{"type":"OutputPrompt","value":{"type":"String","mode":"string","value":"gs.getMessage(\"Great news, there are no known application service outages!\")"},"id":"a23d293ad725424995efc9f5fe57d9d3","name":"No Application Service outage","goal_id":"be67964535094357a603de1fa1910ba3"},{"type":"OutputPrompt","value":{"type":"String","mode":"script","value":"(function execute() {\n    /*\n    // query current and future planned outages \n    var gr = new GlideRecord('cmdb_ci_service_auto');\n    gr.addQuery(\"operational_status\",'1') //op status is operational\n    gr.addQuery(\"severity\", \"1\") // severity is critical\n    //gr.addQuery(\"owned_by\", gs.getUserID());\n    gr.orderBy('busines_criticality');\n    gr.query();\n\n    if (gr.next()) {\n        vaVars.singleSvc = gr.sys_id;\n    }\n    */\n    var msg = \"You have exactly one application service in critical state.\";\n\n    return msg;\n})()\n"},"id":"65f4294497964348995abc85fa86ab2f","name":"Single outage","goal_id":"be67964535094357a603de1fa1910ba3"},{"type":"ScriptedAction","script":"(function execute() {\n\n    var serviceId = vaInputs.list_services\n    if (gs.nil(serviceId))\n        serviceId = vaVars.singleSvc;\n\n    var incident = getOpenIncident(serviceId);\n\n    vaVars.incident = incident;    \n    \n    function getOpenIncident(service) {  \n        var gr = new GlideRecord(\"incident\");\n        gr.addQuery(\"cmdb_ci\", service);\n        gr.addQuery(\"state\", \"!=\", ['6', '7', '8']);\n        gr.orderByDesc(\"sys_created_on\");\n        gr.setLimit(1);\n        gr.query();\n        if (gr.next())\n            return gr.sys_id + '';\n\n        return;\n        \n    }\n})()\n","id":"ed924a9189a14b0093d37c7bc6b70354","name":"Check if there's already an incident","goal_id":"be67964535094357a603de1fa1910ba3"},{"type":"Decision","name":"Decision","branches":[{"type":"Branch","label":"no incident","expression":{"type":"Applicability","mode":"script","value":"(function execute() {\n    return gs.nil(vaVars.incident);\n})()\n"},"id":"89d7d8b298784abaa724776529e9b648","name":"no incident"},{"type":"Branch","label":"has incident","expression":{"type":"Applicability","mode":"script","value":"(function execute() {\n    return !gs.nil(vaVars.incident);\n})()\n"},"id":"5ad731034d504113a56f3a326fcea19d","name":"has incident"}],"id":"f4f910788b4c4c67b4b21268cd21c9e3","goal_id":"be67964535094357a603de1fa1910ba3"},{"type":"ReferenceChoiceInputPrompt","mode":"external","id":"184a5f4c24844ab4a85bd7fce0a2f290","name":"Outage option without incident","goal_id":"be67964535094357a603de1fa1910ba3","variable_id":"5170facfb4ca433e928498660323aa74","message":{"type":"String","mode":"string","value":"What would you like to do?"},"optional":false,"expression_mode":"script","script":"(function execute() {\n    var options = [];\n\n    var serviceId = vaInputs.list_services\n    if (gs.nil(serviceId))\n        serviceId = vaVars.singleSvc;\n\n    options.push({ 'value': 'incident', 'label': 'Open Incident' });\n  \n    if (vaVars.count &gt; 1)\n        options.push({ 'value': 'more', 'label': 'Show more critical services' });\n        \n    options.push({ 'value': 'done', 'label': 'Done' });\n\n\n    return options;\n})()\n","no_options_found_message":{"type":"String","mode":"string","value":"No Records Found"},"condition":{"type":"Condition","mode":"external_script","value":"(function execute() {\n    var options = [];\n\n    var serviceId = vaInputs.list_services\n    if (gs.nil(serviceId))\n        serviceId = vaVars.singleSvc;\n\n    options.push({ 'value': 'incident', 'label': 'Open Incident' });\n  \n    if (vaVars.count &gt; 1)\n        options.push({ 'value': 'more', 'label': 'Show more critical services' });\n        \n    options.push({ 'value': 'done', 'label': 'Done' });\n\n\n    return options;\n})()\n"}},{"type":"Decision","name":"Decision","branches":[{"type":"Branch","label":"incident","expression":{"type":"Applicability","mode":"script","value":"(function execute() {\n    return vaInputs.outage_option_without_incident == 'incident';\n})()\n"},"id":"0faf5b7715e149a6b38d27193a4885de","name":"incident"},{"type":"Branch","label":"Done","expression":{"type":"Applicability","mode":"script","value":"(function execute() {\n    return vaInputs.outage_option_without_incident == 'done';\n})()\n"},"id":"aa8b51b224e9446ca3cac430ea2053b0","name":"Done"},{"type":"Branch","label":"More","expression":{"type":"Applicability","mode":"script","value":"(function execute() {\n    return vaInputs.outage_option_without_incident == 'more';\n})()\n"},"id":"2cbad19baa23403cbac3a1bded5615ae","name":"More"}],"id":"949e5f00d61d461c9499d3dd54d8dc35","goal_id":"be67964535094357a603de1fa1910ba3"},{"type":"OutputPrompt","value":{"type":"String","mode":"script","value":"(function execute() {\n    var appSrv = new GlideRecord('cmdb_ci_service_auto');\n    var serviceId = vaInputs.list_services;\n    if (gs.nil(serviceId))\n        serviceId = vaVars.singleSvc;\n\n    appSrv.get(serviceId);\n    \n    var gr = new GlideRecord(\"incident\");\n    gr.short_description = \"The service is in a critical state.\"\n    gr.cmdb_ci = serviceId;\n    gr.assigned_to.name = \"Fred Luddy\";\n    gr.caller_id.name = \"Event Management\";\n    var sys_id = gr.insert();\n\n    vaVars.incident = sys_id;\n    \n    return gr.number + \" has been created for \" + appSrv.name;\n\n\n})()\n"},"id":"a5df080cefe044ed8d2a80a917a39145","name":"Open Incident","goal_id":"be67964535094357a603de1fa1910ba3"},{"type":"OutputPrompt","value":{"type":"String","mode":"script","value":"(function execute() {\n    var fields = ['number', 'description', \"impact\", \"urgency\", \"priority\", \"assignment_group\", \"assigned_to\"];\n    var card = new global.VaRecordCardRenderer(true);\n\n    var msg = '';\n\n    //Go with the multiple service unless it doesn't exist\n    \n    var gr = new GlideRecord(\"incident\");  \n    if (gr.get(vaVars.incident) ) {\n        var data = card.createFields(fields, gr);\n        //var affectedValue = gr.getDisplayValue('cmdb_ci');\n        //var affectedSystem = card.createStaticField(gs.getMessage('Affected System'), affectedValue, null); //Change label text for CI to Affected System\n        //var affectedSystem = card.createStaticField(\"hello\", \"world\"); //Change label text for CI to Affected System        \n        //data.unshift(affectedSystem);\n        msg = card.renderCard(null, data);\n    }\n    return msg;\n})()\n"},"id":"f98c329f02644143a3fe4cecaf574fe1","name":"Display incident","goal_id":"be67964535094357a603de1fa1910ba3"},{"type":"OutputPrompt","value":{"type":"String","mode":"string","value":"gs.getMessage(\"Here's the detail of the incident.\")"},"id":"418f11b7a2154147b6fcc1e20720cdb1","name":"Incident detail","goal_id":"be67964535094357a603de1fa1910ba3"},{"type":"OutputPrompt","value":{"type":"String","mode":"string","value":"gs.getMessage(\"There's already an existing incident on the service.\")"},"id":"f760ff2197a64ee8be4a61eba50bd442","name":"Existing Incident detail","goal_id":"be67964535094357a603de1fa1910ba3"},{"type":"ChoiceInputPrompt","expression_mode":"simple","id":"caa73c332e6f40f588c046d4ff249cec","name":"Action","goal_id":"be67964535094357a603de1fa1910ba3","variable_id":"b90998e061914c42a5749cc7d28929cb","message":{"type":"String","mode":"string","value":"gs.getMessage(\"What action would you like to perform?\")"},"optional":false},{"type":"Decision","name":"Decision","branches":[{"type":"Branch","label":"Incident","expression":{"type":"Applicability","mode":"script","value":"(function execute() {\n    /* Return true or false to indicate the branch condition's applicability.\n       For example:\n\n       var applies = vaInputs.first_name == 'Bill' ? true : false;\n       return applies;\n    */\n    var applies = vaInputs.action == 'incident' ? true : false;\n    return applies;\n})()\n"},"id":"632255d7090a413a890b21f9eccd5dc2","name":"Incident"},{"type":"Branch","label":"Autoaction","expression":{"type":"Applicability","mode":"script","value":"(function execute() {\n    var applies = vaInputs.action == 'autoaction' ? true : false;\n    return applies;\n})()\n"},"id":"3df2d732127e4522bc6c706691bc6672","name":"Autoaction"}],"id":"8f5e6b922f9147518edb14e41f788a62","goal_id":"be67964535094357a603de1fa1910ba3"},{"type":"ReferenceChoiceInputPrompt","mode":"external","id":"1c9afaef0e3547088aae69f800ec57a5","name":"List actions","goal_id":"be67964535094357a603de1fa1910ba3","applicability":{"type":"Applicability","mode":"script","value":"(function execute() {\n    /* Return true or false to indicate if the topic or topic node can run \n       and be discoverable (or not).  For example:\n       */\n    if (vaVars.rootCI)  {\n        return true;\n    } else {\n        return false;\n    }\n    /*\n    //return true;\n    */\n})()\n"},"variable_id":"2c9e8afa6a1349cba1fe6a4ef647f907","message":{"type":"String","mode":"script","value":"(function execute() {\n    /* Return a quoted string.  For example:\n\n       var result;\n       if (vaInputs.first_name == 'Bill') {\n           return gs.getMessage('hi there {0}', [vaInputs.first_name]);\n       } else {\n           return gs.getMessage('how are you {0}', [vaInputs.last_name]);\n       }\n    */\n    return gs.getMessage('Here is a list of actions for {0} that has worked in the past', [vaVars.rootCIName]);\n    //return '';\n})()\n"},"optional":false,"expression_mode":"script","script":"(function execute() {\n    /* Code your script logic here. For example, you might want to call an external web service\n       to find the beet local Italian restaurants.  Call a Restaurants Web Service then use the results\n       to populate an options array.\n       \n        var options = [];    \n        options.push({ 'value': 'best_italian_1', 'label': gs.getMessage('Best Italian Restaurant Ever') });\n        options.push({ 'value': 'best_italian_2', 'label': gs.getMessage('Even Better Italian Restaurant') });\n        return options;\n    */\n    var options = [];\n    var gr = new GlideAggregate(\"em_remediation_task\");\n    gr.addQuery(\"cmdb_ci\", vaVars.rootCI);\n    gr.addQuery(\"state\", \"3\");  // Closed Complete - aka successful task runs\n    gr.groupBy(\"remediation_workflow\");\n    gr.query();\n    while (gr.next()) {\n      //options.push({'value': gr.getUniqueValue(), 'label': gr.getDisplayValue('remediation_workflow')}); \n      options.push({'value': gr.remediation_workflow.sys_id, 'label': gr.remediation_workflow.name});  \n      //options.push({ 'value': gr.getUniqueValue(), 'label': gr.getDisplayValue('name') });\n    }\n\n    return options;    \n})()","no_options_found_message":{"type":"String","mode":"string","value":"No Records Found"},"condition":{"type":"Condition","mode":"external_script","value":"(function execute() {\n    /* Code your script logic here. For example, you might want to call an external web service\n       to find the beet local Italian restaurants.  Call a Restaurants Web Service then use the results\n       to populate an options array.\n       \n        var options = [];    \n        options.push({ 'value': 'best_italian_1', 'label': gs.getMessage('Best Italian Restaurant Ever') });\n        options.push({ 'value': 'best_italian_2', 'label': gs.getMessage('Even Better Italian Restaurant') });\n        return options;\n    */\n    var options = [];\n    var gr = new GlideAggregate(\"em_remediation_task\");\n    gr.addQuery(\"cmdb_ci\", vaVars.rootCI);\n    gr.addQuery(\"state\", \"3\");  // Closed Complete - aka successful task runs\n    gr.groupBy(\"remediation_workflow\");\n    gr.query();\n    while (gr.next()) {\n      //options.push({'value': gr.getUniqueValue(), 'label': gr.getDisplayValue('remediation_workflow')}); \n      options.push({'value': gr.remediation_workflow.sys_id, 'label': gr.remediation_workflow.name});  \n      //options.push({ 'value': gr.getUniqueValue(), 'label': gr.getDisplayValue('name') });\n    }\n\n    return options;    \n})()"}},{"type":"ScriptedAction","script":"(function execute() {\n    /* Code your scripted action here. For example, you might update a \n       record based on conditional logic:\n    \n        if (vaVars.my_flag == 'say hello') {\n            vaInputs.selected_incident.short_description = 'hi there';\n        } else {\n            vaInputs.selected_incident.short_description = 'bye now';\n        }        \n        vaInputs.selected_incident.update();\n    */\n        var gr = new GlideRecord(\"sa_rca_group\");\n        gr.addQuery(\"service_id\", vaVars.singleSvc);\n        //gr.addQuery(\"state\", \"3\");  // Closed Complete - aka successful task runs\n        //gr.groupBy(\"remediation_workflow\");\n        gr.query();\n        while (gr.next()) {\n            vaVars.rootCI = gr.event_ci_id;\n            vaVars.rootCIName = gr.event_ci_id.name;\n        }\n\n\n    \n})()\n","id":"382210bc3d404b10949a41cccd31f637","name":"Check for Root Cause CI for Service","goal_id":"be67964535094357a603de1fa1910ba3"},{"type":"OutputPrompt","value":{"type":"String","mode":"script","value":"(function execute() {\n    /* Return a quoted string.  For example:\n\n       var result;\n       if (vaInputs.first_name == 'Bill') {\n           return gs.getMessage('hi there {0}', [vaInputs.first_name]);\n       } else {\n           return gs.getMessage('how are you {0}', [vaInputs.last_name]);\n       }\n    */\n    return gs.getMessage('It appears that {0} is the Root Cause CI', [vaVars.rootCIName]);\n    // return '';\n})()\n"},"id":"b174c3f9e96240f4a7711a49adedbe74","name":"Found Root Cause CI","goal_id":"be67964535094357a603de1fa1910ba3"},{"type":"Decision","name":"Decision","branches":[{"type":"Branch","label":"Restart Apache Service","expression":{"type":"Applicability","mode":"script","value":"(function execute() {\n    /* Return true or false to indicate the branch condition's applicability.\n       For example:\n\n       var applies = vaInputs.first_name == 'Bill' ? true : false;\n       return applies;\n    */\n    var applies = vaInputs.list_actions.getDisplayValue() == 'Restart Apache Service' ? true : false;\n    return applies;\n\n})()\n"},"id":"1b277e2de5b141708573a35e54eb6828","name":"Restart Apache Service"},{"type":"Branch","label":"Attache Apache Error Log","expression":{"type":"Applicability","mode":"script","value":"(function execute() {\n    var applies = vaInputs.list_actions == 'Attach Apache Error Log' ? true : false;\n    return applies;\n})()\n"},"id":"e24d90bc1c9f4ded896f48b32ef0eda0","name":"Attache Apache Error Log"}],"id":"a2a560d1f44e4775a6410c56d6f612db","goal_id":"be67964535094357a603de1fa1910ba3"},{"type":"ScriptedAction","script":"(function execute() {\n    /* Code your scripted action here. For example, you might update a \n       record based on conditional logic:\n    \n        if (vaVars.my_flag == 'say hello') {\n            vaInputs.selected_incident.short_description = 'hi there';\n        } else {\n            vaInputs.selected_incident.short_description = 'bye now';\n        }        \n        vaInputs.selected_incident.update();\n    */\nvar gr = new GlideRecord('em_remediation_task');\ngr.initialize();\ngr.cmdb_ci = vaVars.rootCI;\ngr.short_description = 'Automated remediation - restarting service';\ngr.remediation_workflow = vaInputs.list_actions.getValue();\ngr.state = '1';\nvaVars.remediation = gr.insert();\n\n})()\n","id":"a46641c875bd4c8383c8b0bea8e707c1","name":"Restarting Apache Service","goal_id":"be67964535094357a603de1fa1910ba3"},{"type":"ScriptedAction","script":"(function execute() {\n    /* Code your scripted action here. For example, you might update a \n       record based on conditional logic:\n    \n        if (vaVars.my_flag == 'say hello') {\n            vaInputs.selected_incident.short_description = 'hi there';\n        } else {\n            vaInputs.selected_incident.short_description = 'bye now';\n        }        \n        vaInputs.selected_incident.update();\n    */\nvar gr = new GlideRecord('em_remediation_task');\ngr.initialize();\ngr.cmdb_ci = vaVars.rootCI;\ngr.short_description = 'Automated remediation - Attach Apache error_log';\ngr.remediation_workflow = vaInputs.list_actions.getValue();\ngr.state = '1';\ngr.insert();\n\n})()\n","id":"acb987a1b7584835a77a4b44a60185bc","name":"Attaching Apache Error Log","goal_id":"be67964535094357a603de1fa1910ba3"},{"type":"LinkOutputPrompt","header":{"type":"String","mode":"string","value":"gs.getMessage(\"Service Map\")"},"label":{"type":"String","mode":"script","value":"(function execute() {\n    /* Return a quoted string.  For example:\n\n       var result;\n       if (vaInputs.first_name == 'Bill') {\n           return gs.getMessage('hi there {0}', [vaInputs.first_name]);\n       } else {\n           return gs.getMessage('how are you {0}', [vaInputs.last_name]);\n       }\n    */\n    var gr = new GlideRecord('cmdb_ci_service_auto');\n    gr.addQuery('sys_id', vaVars.singleSvc);\n    gr.query();\n    if (gr.next()) {\n        return gs.getMessage('Link to {0} health map', [gr.name]);\n    }\n    //return gs.getMessage('Link to {0} health map', [vaVars.singleSvc.name]);\n})()\n"},"url":{"type":"String","mode":"script","value":"(function execute() {\n    /* Return a quoted string.  For example:\n\n       var result;\n       if (vaInputs.first_name == 'Bill') {\n           return gs.getMessage('hi there {0}', [vaInputs.first_name]);\n       } else {\n           return gs.getMessage('how are you {0}', [vaInputs.last_name]);\n       }\n    */\n    return gs.getMessage('https://{1}.service-now.com/nav_to.do?uri=%2F$sw_topology_map.do%3Fsysparm_bsid%3D{0}%26sysparm_plugin_mode%3Dassurance', [vaVars.singleSvc, vaVars.Instance]);\n})()\n"},"id":"5c893a2eea2e4718a6a56b274ee1555b","name":"Link to Service Health Map","goal_id":"be67964535094357a603de1fa1910ba3"},{"type":"CRUDAction","mode":"read","read_mode":"variable","variable_id":"1d4db0bf0dff401ab22f42a9972c1c69","script":"(function execute(table) {\n    /* Write a glide record query, and return the glide record.\n       For example:\n       \n       var gr = new GlideRecord(table);\n       gr.addEncodedQuery('active=true^number=INC0010099');\n       gr.query();\n       if(gr.next()) {\n          return gr;\n    }\n    */\n\n\n    var gr = new GlideRecord(table);\n    gr.addQuery('sys_id',vaVars.remediation);\n    gr.addQuery('state','3')\n    gr.query();\n    if (gr.next()) {\n        return 'complete';  \n    }\n\n    return 'incomplete';\n\n\n})(table)\n\n","id":"b503128ae5ca4e638e78ce2dec9b861d","name":"check remediation status","goal_id":"be67964535094357a603de1fa1910ba3","condition":{"type":"Condition","mode":"glide_scripted_query","value":"(function execute(table) {\n    /* Write a glide record query, and return the glide record.\n       For example:\n       \n       var gr = new GlideRecord(table);\n       gr.addEncodedQuery('active=true^number=INC0010099');\n       gr.query();\n       if(gr.next()) {\n          return gr;\n    }\n    */\n\n\n    var gr = new GlideRecord(table);\n    gr.addQuery('sys_id',vaVars.remediation);\n    gr.addQuery('state','3')\n    gr.query();\n    if (gr.next()) {\n        return 'complete';  \n    }\n\n    return 'incomplete';\n\n\n})(table)\n\n"}},{"type":"Decision","name":"Decision","branches":[{"type":"Branch","label":"Remediation not complete","expression":{"type":"Applicability","mode":"script","value":"(function execute() {\n    var applies = vaInputs.check_remediation_status == 'incomplete' ? true : false;\n    return applies;\n})()\n"},"id":"35dc3ed4d8a240a5b0f296a6d2641740","name":"Remediation not complete"},{"type":"Branch","label":"Remediation Compete","expression":{"type":"Applicability","mode":"script","value":"(function execute() {\n    /* Return true or false to indicate the branch condition's applicability.\n       For example:\n\n       var applies = vaInputs.first_name == 'Bill' ? true : false;\n       return applies;\n    */\n    var applies = vaInputs.check_remediation_status == 'complete' ? true : false;\n    return applies;\n})()\n"},"id":"764bdd2f79c24a27b23ff8e579fb2246","name":"Remediation Compete"}],"id":"1f2acebe4eb34e41b2028722f79bbd7e","goal_id":"be67964535094357a603de1fa1910ba3"},{"type":"ScriptedAction","script":"(function execute() {\n    /* Code your scripted action here. For example, you might update a \n       record based on conditional logic:\n    \n        if (vaVars.my_flag == 'say hello') {\n            vaInputs.selected_incident.short_description = 'hi there';\n        } else {\n            vaInputs.selected_incident.short_description = 'bye now';\n        }        \n        vaInputs.selected_incident.update();\n    */\n\nsleep(15000);\n\nfunction sleep(ms) {\n       var unixtime_ms = new Date().getTime();\n       while(new Date().getTime() &lt; unixtime_ms + ms) {}\n}\n\n})()\n","id":"c0af4347a8ea4dd4b4559016235d1513","name":"Wait 15 seconds","goal_id":"be67964535094357a603de1fa1910ba3"},{"type":"OutputPrompt","value":{"type":"String","mode":"string","value":"gs.getMessage(\"Remediation Complete Check Service Status\")"},"id":"18f539e7dc52403b91db3f3c789d052f","name":"Remediation Complete","goal_id":"be67964535094357a603de1fa1910ba3"},{"type":"OutputPrompt","value":{"type":"String","mode":"string","value":"gs.getMessage(\"Running Remediation - Please Wait\")"},"id":"0547493c189840d5b06a90a9dd4c09de","name":"Running Remediation - Please Wait","goal_id":"be67964535094357a603de1fa1910ba3"},{"type":"OutputPrompt","value":{"type":"String","mode":"string","value":"gs.getMessage(\"Running Remediation - Please Wait\")"},"id":"b3ffea759c51406399a39ff5b55a713b","name":"Running Remediation - Please Wait","goal_id":"be67964535094357a603de1fa1910ba3"},{"type":"ChoiceInputPrompt","expression_mode":"simple","id":"969cab99cc964a05b0e4abc7284eb361","name":"Remediation Complete","goal_id":"be67964535094357a603de1fa1910ba3","variable_id":"58d1f3c60131438dbe0733fad6d8f94d","message":{"type":"String","mode":"string","value":"gs.getMessage(\"What would you like to do?\")"},"optional":false},{"type":"Decision","name":"Decision","branches":[{"type":"Branch","label":"Done","expression":{"type":"Applicability","mode":"script","value":"(function execute() {\n    return vaInputs.remediation_complete == 'Done';\n})()"},"id":"9e9104c4174b4a2b92f164b0eafc0221","name":"Done"},{"type":"Branch","label":"CheckService","expression":{"type":"Applicability","mode":"script","value":"(function execute() {\n    return vaInputs.remediation_complete == 'CheckService';\n})()\n"},"id":"854519ed8500485083cbdc6bd6947268","name":"CheckService"}],"id":"afdb1841ea5244379c421a83f23e0ffd","goal_id":"be67964535094357a603de1fa1910ba3"},{"type":"ScriptedAction","script":"(function execute() {\n    /* Code your scripted action here. For example, you might update a \n       record based on conditional logic:\n    \n        if (vaVars.my_flag == 'say hello') {\n            vaInputs.selected_incident.short_description = 'hi there';\n        } else {\n            vaInputs.selected_incident.short_description = 'bye now';\n        }        \n        vaInputs.selected_incident.update();\n    */\n\nsleep(20000);\n\nfunction sleep(ms) {\n       var unixtime_ms = new Date().getTime();\n       while(new Date().getTime() &lt; unixtime_ms + ms) {}\n}\n\n})()","id":"fd9d589a10e849c58ca7574f6afc3382","name":"Validate Execution is complete","goal_id":"be67964535094357a603de1fa1910ba3"}],"edges":[{"type":"Edge","source_node_id":"18f539e7dc52403b91db3f3c789d052f","target_node_id":"969cab99cc964a05b0e4abc7284eb361","id":"716e6c4aa6f6442e89fb36655e51769b"},{"type":"Edge","source_node_id":"1f2acebe4eb34e41b2028722f79bbd7e","target_node_id":"c0af4347a8ea4dd4b4559016235d1513","branch_id":"35dc3ed4d8a240a5b0f296a6d2641740","id":"5e50878a8dfc4fa6b6b9b5ad3ed4c90a","name":"35dc3ed4d8a240a5b0f296a6d2641740"},{"type":"Edge","source_node_id":"c0af4347a8ea4dd4b4559016235d1513","target_node_id":"b503128ae5ca4e638e78ce2dec9b861d","id":"de28cfb2136d4be99419d89c3cb8f72d"},{"type":"Edge","source_node_id":"65f4294497964348995abc85fa86ab2f","target_node_id":"7f37ba095952401297312bb7cbf7307c","id":"83b58c60e5064154a5de09455241306e"},{"type":"Edge","source_node_id":"6776d731f3f04707ab6f6fcc6673a1f2","target_node_id":"7f37ba095952401297312bb7cbf7307c","id":"6585e4668273415d9436aae681288edb"},{"type":"Edge","source_node_id":"bbd6498a971e46ab8db02ff99a71c3ce","target_node_id":"b36bb27d63c74ad69ffd27fb5e67662f","id":"f30f97515932473683ba1a015845d0a0"},{"type":"Edge","source_node_id":"b36bb27d63c74ad69ffd27fb5e67662f","target_node_id":"ebfb4aa1ed33451fa044f1a6ff7cd395","branch_id":"b1f85e0ccfc0416faba09cecbc437d24","id":"a8e861899b33429d8bf44f8e1e866bf4","name":"b1f85e0ccfc0416faba09cecbc437d24"},{"type":"Edge","source_node_id":"b36bb27d63c74ad69ffd27fb5e67662f","target_node_id":"ebfb4aa1ed33451fa044f1a6ff7cd395","branch_id":"4d1f8fac903645df94850c3b28bf39d6","id":"48d4b3a81f2745e09dcb6d7b365e629f","name":"4d1f8fac903645df94850c3b28bf39d6"},{"type":"Edge","source_node_id":"b36bb27d63c74ad69ffd27fb5e67662f","target_node_id":"0632c86cc8fd4c1ba4c317c6eb0c1c72","branch_id":"09ba4144907b4da9872d5d33e386e2a4","id":"d0eb51a7f39c4dd68384e0fa88bebef7","name":"09ba4144907b4da9872d5d33e386e2a4"},{"type":"Edge","source_node_id":"0632c86cc8fd4c1ba4c317c6eb0c1c72","target_node_id":"f98c329f02644143a3fe4cecaf574fe1","id":"c018181c81d546adb53a8bac2f294db7"},{"type":"Edge","source_node_id":"7f37ba095952401297312bb7cbf7307c","target_node_id":"6596fc2a6a0f4f99a2ea7bf6d8b12206","id":"a49656155c8648879c41b511668289b7"},{"type":"Edge","source_node_id":"b36bb27d63c74ad69ffd27fb5e67662f","target_node_id":"6776d731f3f04707ab6f6fcc6673a1f2","branch_id":"b94efc1bf7e24f17badaa95f5c3e3735","id":"b8b5d717b5df4f52bc323072e9acf03a","name":"b94efc1bf7e24f17badaa95f5c3e3735"},{"type":"Edge","source_node_id":"61a5f1e6e48a48e5a4e126f9ce542924","target_node_id":"c2fc3969dcd0440a906ca3076c6c7b9c","id":"232dcdfffae54f0596dadec113be5392"},{"type":"Edge","source_node_id":"c2fc3969dcd0440a906ca3076c6c7b9c","target_node_id":"35583873192f4f8ab5955daef3a87377","id":"b3d880609add420b8263ff1d150f5e4b"},{"type":"Edge","source_node_id":"35583873192f4f8ab5955daef3a87377","target_node_id":"6776d731f3f04707ab6f6fcc6673a1f2","branch_id":"93fbafcbcadf441d844caaa5a4e46ce1","id":"ec45537bc6d04babb9a2cdbc12b78810","name":"93fbafcbcadf441d844caaa5a4e46ce1"},{"type":"Edge","source_node_id":"35583873192f4f8ab5955daef3a87377","target_node_id":"a23d293ad725424995efc9f5fe57d9d3","branch_id":"0e84e681ee7445e29bebb023e74504d6","id":"7c91881501e64fc988aba9b46ecfcd4d","name":"0e84e681ee7445e29bebb023e74504d6"},{"type":"Edge","source_node_id":"a23d293ad725424995efc9f5fe57d9d3","target_node_id":"ebfb4aa1ed33451fa044f1a6ff7cd395","id":"2edf2318d92643f5b32fb1cd5aba5af2"},{"type":"Edge","source_node_id":"35583873192f4f8ab5955daef3a87377","target_node_id":"65f4294497964348995abc85fa86ab2f","branch_id":"4e6e888a1f1446d090e38aefb22477f3","id":"78b24db34acc4e728542f9b101615670","name":"4e6e888a1f1446d090e38aefb22477f3"},{"type":"Edge","source_node_id":"ed924a9189a14b0093d37c7bc6b70354","target_node_id":"f4f910788b4c4c67b4b21268cd21c9e3","id":"f36629e579074f2b9191cade66834724"},{"type":"Edge","source_node_id":"f4f910788b4c4c67b4b21268cd21c9e3","target_node_id":"184a5f4c24844ab4a85bd7fce0a2f290","branch_id":"89d7d8b298784abaa724776529e9b648","id":"bc936d5fcea24d25bf0422af7de56087","name":"89d7d8b298784abaa724776529e9b648"},{"type":"Edge","source_node_id":"184a5f4c24844ab4a85bd7fce0a2f290","target_node_id":"949e5f00d61d461c9499d3dd54d8dc35","id":"aec8b897329849ceb31bbb4187f58b78"},{"type":"Edge","source_node_id":"949e5f00d61d461c9499d3dd54d8dc35","target_node_id":"a5df080cefe044ed8d2a80a917a39145","branch_id":"0faf5b7715e149a6b38d27193a4885de","id":"238fa0da816645d583485e63efb4e965","name":"0faf5b7715e149a6b38d27193a4885de"},{"type":"Edge","source_node_id":"949e5f00d61d461c9499d3dd54d8dc35","target_node_id":"ebfb4aa1ed33451fa044f1a6ff7cd395","branch_id":"aa8b51b224e9446ca3cac430ea2053b0","id":"c5dc56c50ca84682b8361f80f280c6b4","name":"aa8b51b224e9446ca3cac430ea2053b0"},{"type":"Edge","source_node_id":"f98c329f02644143a3fe4cecaf574fe1","target_node_id":"bbd6498a971e46ab8db02ff99a71c3ce","id":"b2c1bf47f1334528b6fe8e4719ad4e6d"},{"type":"Edge","source_node_id":"a5df080cefe044ed8d2a80a917a39145","target_node_id":"418f11b7a2154147b6fcc1e20720cdb1","id":"ab552aca5f2946a1b60816c790037c87"},{"type":"Edge","source_node_id":"418f11b7a2154147b6fcc1e20720cdb1","target_node_id":"f98c329f02644143a3fe4cecaf574fe1","id":"d74f56c5699441e4b0a7d088855ab382"},{"type":"Edge","source_node_id":"f4f910788b4c4c67b4b21268cd21c9e3","target_node_id":"f760ff2197a64ee8be4a61eba50bd442","branch_id":"5ad731034d504113a56f3a326fcea19d","id":"a3001be9846942f48fe0927384149103","name":"5ad731034d504113a56f3a326fcea19d"},{"type":"Edge","source_node_id":"f760ff2197a64ee8be4a61eba50bd442","target_node_id":"f98c329f02644143a3fe4cecaf574fe1","id":"fc020337c8d34912aa1608422f4d7e4e"},{"type":"Edge","source_node_id":"949e5f00d61d461c9499d3dd54d8dc35","target_node_id":"6776d731f3f04707ab6f6fcc6673a1f2","branch_id":"2cbad19baa23403cbac3a1bded5615ae","id":"795e733be7594578a7f7341bde0b5364","name":"2cbad19baa23403cbac3a1bded5615ae"},{"type":"Edge","source_node_id":"b36bb27d63c74ad69ffd27fb5e67662f","target_node_id":"65f4294497964348995abc85fa86ab2f","branch_id":"715d54687b014f72a35c9c656fc52f62","id":"80c0fd1579c44f4cae28cb7434dede88","name":"715d54687b014f72a35c9c656fc52f62"},{"type":"Edge","source_node_id":"caa73c332e6f40f588c046d4ff249cec","target_node_id":"8f5e6b922f9147518edb14e41f788a62","id":"a9277415eabd45f39fa3c18f7bc239a7"},{"type":"Edge","source_node_id":"8f5e6b922f9147518edb14e41f788a62","target_node_id":"ed924a9189a14b0093d37c7bc6b70354","branch_id":"632255d7090a413a890b21f9eccd5dc2","id":"fdd356aeb6464c98ba6f461c96df5e1d","name":"632255d7090a413a890b21f9eccd5dc2"},{"type":"Edge","source_node_id":"8f5e6b922f9147518edb14e41f788a62","target_node_id":"382210bc3d404b10949a41cccd31f637","branch_id":"3df2d732127e4522bc6c706691bc6672","id":"b16614c3691e4f928c447a73af239943","name":"3df2d732127e4522bc6c706691bc6672"},{"type":"Edge","source_node_id":"382210bc3d404b10949a41cccd31f637","target_node_id":"b174c3f9e96240f4a7711a49adedbe74","id":"db5c134c8bba4077be9d1df4d926a247"},{"type":"Edge","source_node_id":"b174c3f9e96240f4a7711a49adedbe74","target_node_id":"1c9afaef0e3547088aae69f800ec57a5","id":"c40ed9c9224e426f9d5dfb1878903b83"},{"type":"Edge","source_node_id":"1c9afaef0e3547088aae69f800ec57a5","target_node_id":"a2a560d1f44e4775a6410c56d6f612db","id":"d66ee987c30a4554a4c9277d76ee8fc1"},{"type":"Edge","source_node_id":"a2a560d1f44e4775a6410c56d6f612db","target_node_id":"a46641c875bd4c8383c8b0bea8e707c1","branch_id":"1b277e2de5b141708573a35e54eb6828","id":"7ff07ea8d8c24db4974be190b43eeab9","name":"1b277e2de5b141708573a35e54eb6828"},{"type":"Edge","source_node_id":"a2a560d1f44e4775a6410c56d6f612db","target_node_id":"acb987a1b7584835a77a4b44a60185bc","branch_id":"e24d90bc1c9f4ded896f48b32ef0eda0","id":"939f1c18894b4a4a9abfb1eb9edc7e36","name":"e24d90bc1c9f4ded896f48b32ef0eda0"},{"type":"Edge","source_node_id":"6596fc2a6a0f4f99a2ea7bf6d8b12206","target_node_id":"5c893a2eea2e4718a6a56b274ee1555b","id":"1d65233dab6442258cb4b8c3edf13055"},{"type":"Edge","source_node_id":"5c893a2eea2e4718a6a56b274ee1555b","target_node_id":"caa73c332e6f40f588c046d4ff249cec","id":"5cb67aeaba4e49c4952622a908e41bbc"},{"type":"Edge","source_node_id":"b503128ae5ca4e638e78ce2dec9b861d","target_node_id":"1f2acebe4eb34e41b2028722f79bbd7e","id":"84d797fa9ead4580ba035a8a3aa60b16"},{"type":"Edge","source_node_id":"a46641c875bd4c8383c8b0bea8e707c1","target_node_id":"0547493c189840d5b06a90a9dd4c09de","id":"903ccc37d0b94c3790f7dada5f4ad084"},{"type":"Edge","source_node_id":"0547493c189840d5b06a90a9dd4c09de","target_node_id":"b503128ae5ca4e638e78ce2dec9b861d","id":"c03a4d3c419c4346a699e981bce700b5"},{"type":"Edge","source_node_id":"acb987a1b7584835a77a4b44a60185bc","target_node_id":"b3ffea759c51406399a39ff5b55a713b","id":"68f0ed580e65444381cabddbda99b215"},{"type":"Edge","source_node_id":"b3ffea759c51406399a39ff5b55a713b","target_node_id":"b503128ae5ca4e638e78ce2dec9b861d","id":"3fcb07e2d2ed43d287a11ec1988a2241"},{"type":"Edge","source_node_id":"969cab99cc964a05b0e4abc7284eb361","target_node_id":"afdb1841ea5244379c421a83f23e0ffd","id":"9a2440b1a62440f08103dfa2d6450429"},{"type":"Edge","source_node_id":"afdb1841ea5244379c421a83f23e0ffd","target_node_id":"ebfb4aa1ed33451fa044f1a6ff7cd395","branch_id":"9e9104c4174b4a2b92f164b0eafc0221","id":"b5759b0398624a66bd3669f148459139","name":"9e9104c4174b4a2b92f164b0eafc0221"},{"type":"Edge","source_node_id":"afdb1841ea5244379c421a83f23e0ffd","target_node_id":"c2fc3969dcd0440a906ca3076c6c7b9c","branch_id":"854519ed8500485083cbdc6bd6947268","id":"4a3d0c93ce3b4990af40f67749999101","name":"854519ed8500485083cbdc6bd6947268"},{"type":"Edge","source_node_id":"1f2acebe4eb34e41b2028722f79bbd7e","target_node_id":"fd9d589a10e849c58ca7574f6afc3382","branch_id":"764bdd2f79c24a27b23ff8e579fb2246","id":"14f51fb26900430897ed39a8a589fa2b","name":"764bdd2f79c24a27b23ff8e579fb2246"},{"type":"Edge","source_node_id":"fd9d589a10e849c58ca7574f6afc3382","target_node_id":"18f539e7dc52403b91db3f3c789d052f","id":"c336ab95b3714602af6aa7ea109daa4f"}],"id":"be67964535094357a603de1fa1910ba3"}],"script_variables":[{"type":"String","name":"count","value":{"type":"String","mode":"string"},"id":"18f705148da14a91bc2f09665f80eaa5"},{"type":"String","name":"singleSvc","value":{"type":"String","mode":"string","value":"Represents the single service that is in critical state"},"id":"7a5673ae37d14475a1df779c55ac40ec"},{"type":"String","name":"incident","value":{"type":"String","mode":"string"},"id":"eff8ba9d71aa45218d513e40d4b6f548"},{"type":"String","name":"rootCI","value":{"type":"String","mode":"string"},"id":"d8ddc5dbbab34897ba28fd8435d73abc"},{"type":"String","name":"rootCIName","value":{"type":"String","mode":"string"},"id":"dfeff1caea7449f19eb98ed3080fbf60"},{"type":"String","name":"remediation","value":{"type":"String","mode":"string"},"id":"43476563d40c4ba5a022c0e690ec7640"},{"type":"String","name":"Instance","value":{"type":"String","mode":"string"},"id":"115767964e814c099807b8dd299cb983"}],"glide_variables":[{"type":"Choice","choices":[],"id":"8ab12f37a26e4d98ab006ca14a4d30ec","name":"list_services","table":""},{"type":"Choice","choices":[],"id":"9ee9bc2161fb45ca91606b02ff702fec","name":"outage_options","table":""},{"type":"Choice","choices":[],"id":"5170facfb4ca433e928498660323aa74","name":"outage_option_without_incident","table":""},{"type":"Choice","choices":[{"name":"Check for Automated Actions","element":"autoaction"},{"name":"Open Incident","element":"incident"}],"id":"b90998e061914c42a5749cc7d28929cb","name":"action"},{"type":"Choice","choices":[],"id":"2c9e8afa6a1349cba1fe6a4ef647f907","name":"list_actions","table":""},{"type":"Reference","table":"em_remediation_task","id":"1d4db0bf0dff401ab22f42a9972c1c69","name":"check_remediation_status"},{"type":"Choice","choices":[{"name":"Done","element":"Done"},{"name":"CheckService","element":"CheckService"}],"id":"58d1f3c60131438dbe0733fad6d8f94d","name":"remediation_complete"},{"type":"Reference","table":"sys_user","id":"current-user","name":"user"}],"roles":[],"scope":"122ec67913fb1b0058efb1422244b09f","id":"53ed51ea13f9e300215170d66144b059","name":"Application Status","key_phrases":["Application Status","Service Status","outage","down","working","system status"]}</design_definition>
        <design_topic_id>53ed51ea13f9e300215170d66144b059</design_topic_id>
        <name>Application Status</name>
        <sys_class_name>sys_cb_design_topic</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-11-20 05:05:30</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_id>c7a8e803137d6700215170d66144b0ba</sys_id>
        <sys_mod_count>17</sys_mod_count>
        <sys_name>FlowTopic</sys_name>
        <sys_package display_value="Virtual Agent ITOM" source="x_snc_va_itom">122ec67913fb1b0058efb1422244b09f</sys_package>
        <sys_policy/>
        <sys_scope display_value="Virtual Agent ITOM">122ec67913fb1b0058efb1422244b09f</sys_scope>
        <sys_update_name>sys_cb_design_topic_c7a8e803137d6700215170d66144b0ba</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-08-15 21:05:29</sys_updated_on>
        <type>FlowTopic</type>
    </sys_cb_design_topic>
</record_update>
